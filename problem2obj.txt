
problem2:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	53                   	push   %ebx
 8049001:	83 ec 08             	sub    $0x8,%esp
 8049004:	e8 b7 00 00 00       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
 804900f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8049015:	85 c0                	test   %eax,%eax
 8049017:	74 02                	je     804901b <_init+0x1b>
 8049019:	ff d0                	call   *%eax
 804901b:	83 c4 08             	add    $0x8,%esp
 804901e:	5b                   	pop    %ebx
 804901f:	c3                   	ret    

Disassembly of section .plt:

08049020 <.plt>:
 8049020:	ff 35 04 c0 04 08    	pushl  0x804c004
 8049026:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804902c:	00 00                	add    %al,(%eax)
	...

08049030 <printf@plt>:
 8049030:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049036:	68 00 00 00 00       	push   $0x0
 804903b:	e9 e0 ff ff ff       	jmp    8049020 <.plt>

08049040 <strcpy@plt>:
 8049040:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049046:	68 08 00 00 00       	push   $0x8
 804904b:	e9 d0 ff ff ff       	jmp    8049020 <.plt>

08049050 <puts@plt>:
 8049050:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8049056:	68 10 00 00 00       	push   $0x10
 804905b:	e9 c0 ff ff ff       	jmp    8049020 <.plt>

08049060 <__libc_start_main@plt>:
 8049060:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8049066:	68 18 00 00 00       	push   $0x18
 804906b:	e9 b0 ff ff ff       	jmp    8049020 <.plt>

Disassembly of section .text:

08049070 <_start>:
 8049070:	31 ed                	xor    %ebp,%ebp
 8049072:	5e                   	pop    %esi
 8049073:	89 e1                	mov    %esp,%ecx
 8049075:	83 e4 f0             	and    $0xfffffff0,%esp
 8049078:	50                   	push   %eax
 8049079:	54                   	push   %esp
 804907a:	52                   	push   %edx
 804907b:	e8 23 00 00 00       	call   80490a3 <_start+0x33>
 8049080:	81 c3 80 2f 00 00    	add    $0x2f80,%ebx
 8049086:	8d 83 10 d3 ff ff    	lea    -0x2cf0(%ebx),%eax
 804908c:	50                   	push   %eax
 804908d:	8d 83 b0 d2 ff ff    	lea    -0x2d50(%ebx),%eax
 8049093:	50                   	push   %eax
 8049094:	51                   	push   %ecx
 8049095:	56                   	push   %esi
 8049096:	c7 c0 e9 91 04 08    	mov    $0x80491e9,%eax
 804909c:	50                   	push   %eax
 804909d:	e8 be ff ff ff       	call   8049060 <__libc_start_main@plt>
 80490a2:	f4                   	hlt    
 80490a3:	8b 1c 24             	mov    (%esp),%ebx
 80490a6:	c3                   	ret    
 80490a7:	66 90                	xchg   %ax,%ax
 80490a9:	66 90                	xchg   %ax,%ax
 80490ab:	66 90                	xchg   %ax,%ax
 80490ad:	66 90                	xchg   %ax,%ax
 80490af:	90                   	nop

080490b0 <_dl_relocate_static_pie>:
 80490b0:	c3                   	ret    
 80490b1:	66 90                	xchg   %ax,%ax
 80490b3:	66 90                	xchg   %ax,%ax
 80490b5:	66 90                	xchg   %ax,%ax
 80490b7:	66 90                	xchg   %ax,%ax
 80490b9:	66 90                	xchg   %ax,%ax
 80490bb:	66 90                	xchg   %ax,%ax
 80490bd:	66 90                	xchg   %ax,%ax
 80490bf:	90                   	nop

080490c0 <__x86.get_pc_thunk.bx>:
 80490c0:	8b 1c 24             	mov    (%esp),%ebx
 80490c3:	c3                   	ret    
 80490c4:	66 90                	xchg   %ax,%ax
 80490c6:	66 90                	xchg   %ax,%ax
 80490c8:	66 90                	xchg   %ax,%ax
 80490ca:	66 90                	xchg   %ax,%ax
 80490cc:	66 90                	xchg   %ax,%ax
 80490ce:	66 90                	xchg   %ax,%ax

080490d0 <deregister_tm_clones>:
 80490d0:	b8 24 c0 04 08       	mov    $0x804c024,%eax
 80490d5:	3d 24 c0 04 08       	cmp    $0x804c024,%eax
 80490da:	74 24                	je     8049100 <deregister_tm_clones+0x30>
 80490dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80490e1:	85 c0                	test   %eax,%eax
 80490e3:	74 1b                	je     8049100 <deregister_tm_clones+0x30>
 80490e5:	55                   	push   %ebp
 80490e6:	89 e5                	mov    %esp,%ebp
 80490e8:	83 ec 14             	sub    $0x14,%esp
 80490eb:	68 24 c0 04 08       	push   $0x804c024
 80490f0:	ff d0                	call   *%eax
 80490f2:	83 c4 10             	add    $0x10,%esp
 80490f5:	c9                   	leave  
 80490f6:	c3                   	ret    
 80490f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80490fe:	66 90                	xchg   %ax,%ax
 8049100:	c3                   	ret    
 8049101:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049108:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804910f:	90                   	nop

08049110 <register_tm_clones>:
 8049110:	b8 24 c0 04 08       	mov    $0x804c024,%eax
 8049115:	2d 24 c0 04 08       	sub    $0x804c024,%eax
 804911a:	89 c2                	mov    %eax,%edx
 804911c:	c1 e8 1f             	shr    $0x1f,%eax
 804911f:	c1 fa 02             	sar    $0x2,%edx
 8049122:	01 d0                	add    %edx,%eax
 8049124:	d1 f8                	sar    %eax
 8049126:	74 20                	je     8049148 <register_tm_clones+0x38>
 8049128:	ba 00 00 00 00       	mov    $0x0,%edx
 804912d:	85 d2                	test   %edx,%edx
 804912f:	74 17                	je     8049148 <register_tm_clones+0x38>
 8049131:	55                   	push   %ebp
 8049132:	89 e5                	mov    %esp,%ebp
 8049134:	83 ec 10             	sub    $0x10,%esp
 8049137:	50                   	push   %eax
 8049138:	68 24 c0 04 08       	push   $0x804c024
 804913d:	ff d2                	call   *%edx
 804913f:	83 c4 10             	add    $0x10,%esp
 8049142:	c9                   	leave  
 8049143:	c3                   	ret    
 8049144:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049148:	c3                   	ret    
 8049149:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049150 <__do_global_dtors_aux>:
 8049150:	80 3d 24 c0 04 08 00 	cmpb   $0x0,0x804c024
 8049157:	75 17                	jne    8049170 <__do_global_dtors_aux+0x20>
 8049159:	55                   	push   %ebp
 804915a:	89 e5                	mov    %esp,%ebp
 804915c:	83 ec 08             	sub    $0x8,%esp
 804915f:	e8 6c ff ff ff       	call   80490d0 <deregister_tm_clones>
 8049164:	c6 05 24 c0 04 08 01 	movb   $0x1,0x804c024
 804916b:	c9                   	leave  
 804916c:	c3                   	ret    
 804916d:	8d 76 00             	lea    0x0(%esi),%esi
 8049170:	c3                   	ret    
 8049171:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049178:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804917f:	90                   	nop

08049180 <frame_dummy>:
 8049180:	eb 8e                	jmp    8049110 <register_tm_clones>

08049182 <parrot>:
 8049182:	56                   	push   %esi
 8049183:	53                   	push   %ebx
 8049184:	83 ec 24             	sub    $0x24,%esp
 8049187:	e8 34 ff ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 804918c:	81 c3 74 2e 00 00    	add    $0x2e74,%ebx
 8049192:	89 e6                	mov    %esp,%esi
 8049194:	b9 00 00 00 00       	mov    $0x0,%ecx
 8049199:	ba 20 00 00 00       	mov    $0x20,%edx
 804919e:	b8 00 00 00 00       	mov    $0x0,%eax
 80491a3:	89 0c 06             	mov    %ecx,(%esi,%eax,1)
 80491a6:	83 c0 04             	add    $0x4,%eax
 80491a9:	39 d0                	cmp    %edx,%eax
 80491ab:	72 f6                	jb     80491a3 <parrot+0x21>
 80491ad:	83 ec 08             	sub    $0x8,%esp
 80491b0:	ff 74 24 38          	pushl  0x38(%esp)
 80491b4:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80491b8:	56                   	push   %esi
 80491b9:	e8 82 fe ff ff       	call   8049040 <strcpy@plt>
 80491be:	83 c4 08             	add    $0x8,%esp
 80491c1:	ff 74 24 38          	pushl  0x38(%esp)
 80491c5:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
 80491cb:	50                   	push   %eax
 80491cc:	e8 5f fe ff ff       	call   8049030 <printf@plt>
 80491d1:	83 c4 08             	add    $0x8,%esp
 80491d4:	56                   	push   %esi
 80491d5:	8d 83 14 e0 ff ff    	lea    -0x1fec(%ebx),%eax
 80491db:	50                   	push   %eax
 80491dc:	e8 4f fe ff ff       	call   8049030 <printf@plt>
 80491e1:	89 f4                	mov    %esi,%esp
 80491e3:	83 c4 24             	add    $0x24,%esp
 80491e6:	5b                   	pop    %ebx
 80491e7:	5e                   	pop    %esi
 80491e8:	c3                   	ret    

080491e9 <main>:
 80491e9:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80491ed:	83 e4 f0             	and    $0xfffffff0,%esp
 80491f0:	ff 71 fc             	pushl  -0x4(%ecx)
 80491f3:	55                   	push   %ebp
 80491f4:	89 e5                	mov    %esp,%ebp
 80491f6:	53                   	push   %ebx
 80491f7:	51                   	push   %ecx
 80491f8:	e8 c3 fe ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 80491fd:	81 c3 03 2e 00 00    	add    $0x2e03,%ebx
 8049203:	8b 41 04             	mov    0x4(%ecx),%eax
 8049206:	83 39 01             	cmpl   $0x1,(%ecx)
 8049209:	74 1d                	je     8049228 <main+0x3f>
 804920b:	83 ec 0c             	sub    $0xc,%esp
 804920e:	ff 70 04             	pushl  0x4(%eax)
 8049211:	e8 6c ff ff ff       	call   8049182 <parrot>
 8049216:	83 c4 10             	add    $0x10,%esp
 8049219:	b8 00 00 00 00       	mov    $0x0,%eax
 804921e:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8049221:	59                   	pop    %ecx
 8049222:	5b                   	pop    %ebx
 8049223:	5d                   	pop    %ebp
 8049224:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8049227:	c3                   	ret    
 8049228:	83 ec 08             	sub    $0x8,%esp
 804922b:	ff 30                	pushl  (%eax)
 804922d:	8d 83 20 e0 ff ff    	lea    -0x1fe0(%ebx),%eax
 8049233:	50                   	push   %eax
 8049234:	e8 f7 fd ff ff       	call   8049030 <printf@plt>
 8049239:	83 c4 10             	add    $0x10,%esp
 804923c:	eb db                	jmp    8049219 <main+0x30>

0804923e <flag>:
 804923e:	53                   	push   %ebx
 804923f:	83 ec 28             	sub    $0x28,%esp
 8049242:	e8 79 fe ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049247:	81 c3 b9 2d 00 00    	add    $0x2db9,%ebx
 804924d:	b8 00 00 00 00       	mov    $0x0,%eax
 8049252:	eb 15                	jmp    8049269 <flag+0x2b>
 8049254:	0f b6 94 03 60 e0 ff 	movzbl -0x1fa0(%ebx,%eax,1),%edx
 804925b:	ff 
 804925c:	32 94 03 80 e0 ff ff 	xor    -0x1f80(%ebx,%eax,1),%dl
 8049263:	88 14 04             	mov    %dl,(%esp,%eax,1)
 8049266:	83 c0 01             	add    $0x1,%eax
 8049269:	83 f8 1f             	cmp    $0x1f,%eax
 804926c:	76 e6                	jbe    8049254 <flag+0x16>
 804926e:	83 ec 0c             	sub    $0xc,%esp
 8049271:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8049275:	50                   	push   %eax
 8049276:	e8 d5 fd ff ff       	call   8049050 <puts@plt>
 804927b:	83 c4 38             	add    $0x38,%esp
 804927e:	5b                   	pop    %ebx
 804927f:	c3                   	ret    

08049280 <backdoor>:
 8049280:	53                   	push   %ebx
 8049281:	83 ec 08             	sub    $0x8,%esp
 8049284:	e8 37 fe ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049289:	81 c3 77 2d 00 00    	add    $0x2d77,%ebx
 804928f:	e8 aa ff ff ff       	call   804923e <flag>
 8049294:	83 ec 0c             	sub    $0xc,%esp
 8049297:	8d 83 3a e0 ff ff    	lea    -0x1fc6(%ebx),%eax
 804929d:	50                   	push   %eax
 804929e:	e8 ad fd ff ff       	call   8049050 <puts@plt>
 80492a3:	83 c4 18             	add    $0x18,%esp
 80492a6:	5b                   	pop    %ebx
 80492a7:	c3                   	ret    
 80492a8:	66 90                	xchg   %ax,%ax
 80492aa:	66 90                	xchg   %ax,%ax
 80492ac:	66 90                	xchg   %ax,%ax
 80492ae:	66 90                	xchg   %ax,%ax

080492b0 <__libc_csu_init>:
 80492b0:	55                   	push   %ebp
 80492b1:	e8 5b 00 00 00       	call   8049311 <__x86.get_pc_thunk.bp>
 80492b6:	81 c5 4a 2d 00 00    	add    $0x2d4a,%ebp
 80492bc:	57                   	push   %edi
 80492bd:	56                   	push   %esi
 80492be:	53                   	push   %ebx
 80492bf:	83 ec 0c             	sub    $0xc,%esp
 80492c2:	89 eb                	mov    %ebp,%ebx
 80492c4:	8b 7c 24 28          	mov    0x28(%esp),%edi
 80492c8:	e8 33 fd ff ff       	call   8049000 <_init>
 80492cd:	8d 9d 10 ff ff ff    	lea    -0xf0(%ebp),%ebx
 80492d3:	8d 85 0c ff ff ff    	lea    -0xf4(%ebp),%eax
 80492d9:	29 c3                	sub    %eax,%ebx
 80492db:	c1 fb 02             	sar    $0x2,%ebx
 80492de:	74 25                	je     8049305 <__libc_csu_init+0x55>
 80492e0:	31 f6                	xor    %esi,%esi
 80492e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80492e8:	83 ec 04             	sub    $0x4,%esp
 80492eb:	57                   	push   %edi
 80492ec:	ff 74 24 2c          	pushl  0x2c(%esp)
 80492f0:	ff 74 24 2c          	pushl  0x2c(%esp)
 80492f4:	ff 94 b5 0c ff ff ff 	call   *-0xf4(%ebp,%esi,4)
 80492fb:	83 c6 01             	add    $0x1,%esi
 80492fe:	83 c4 10             	add    $0x10,%esp
 8049301:	39 f3                	cmp    %esi,%ebx
 8049303:	75 e3                	jne    80492e8 <__libc_csu_init+0x38>
 8049305:	83 c4 0c             	add    $0xc,%esp
 8049308:	5b                   	pop    %ebx
 8049309:	5e                   	pop    %esi
 804930a:	5f                   	pop    %edi
 804930b:	5d                   	pop    %ebp
 804930c:	c3                   	ret    
 804930d:	8d 76 00             	lea    0x0(%esi),%esi

08049310 <__libc_csu_fini>:
 8049310:	c3                   	ret    

08049311 <__x86.get_pc_thunk.bp>:
 8049311:	8b 2c 24             	mov    (%esp),%ebp
 8049314:	c3                   	ret    

Disassembly of section .fini:

08049318 <_fini>:
 8049318:	53                   	push   %ebx
 8049319:	83 ec 08             	sub    $0x8,%esp
 804931c:	e8 9f fd ff ff       	call   80490c0 <__x86.get_pc_thunk.bx>
 8049321:	81 c3 df 2c 00 00    	add    $0x2cdf,%ebx
 8049327:	83 c4 08             	add    $0x8,%esp
 804932a:	5b                   	pop    %ebx
 804932b:	c3                   	ret    
