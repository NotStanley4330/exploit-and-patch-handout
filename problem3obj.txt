
problem3:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 c7 00 00 00       	call   10d0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <__stack_chk_fail@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <strcpy@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <puts@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

00001060 <__libc_start_main@plt>:
    1060:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1066:	68 18 00 00 00       	push   $0x18
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

00001070 <fprintf@plt>:
    1070:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1076:	68 20 00 00 00       	push   $0x20
    107b:	e9 a0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001080 <__cxa_finalize@plt>:
    1080:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
    1086:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001090 <_start>:
    1090:	31 ed                	xor    %ebp,%ebp
    1092:	5e                   	pop    %esi
    1093:	89 e1                	mov    %esp,%ecx
    1095:	83 e4 f0             	and    $0xfffffff0,%esp
    1098:	50                   	push   %eax
    1099:	54                   	push   %esp
    109a:	52                   	push   %edx
    109b:	e8 22 00 00 00       	call   10c2 <_start+0x32>
    10a0:	81 c3 60 2f 00 00    	add    $0x2f60,%ebx
    10a6:	8d 83 d0 d3 ff ff    	lea    -0x2c30(%ebx),%eax
    10ac:	50                   	push   %eax
    10ad:	8d 83 70 d3 ff ff    	lea    -0x2c90(%ebx),%eax
    10b3:	50                   	push   %eax
    10b4:	51                   	push   %ecx
    10b5:	56                   	push   %esi
    10b6:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
    10bc:	e8 9f ff ff ff       	call   1060 <__libc_start_main@plt>
    10c1:	f4                   	hlt    
    10c2:	8b 1c 24             	mov    (%esp),%ebx
    10c5:	c3                   	ret    
    10c6:	66 90                	xchg   %ax,%ax
    10c8:	66 90                	xchg   %ax,%ax
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <__x86.get_pc_thunk.bx>:
    10d0:	8b 1c 24             	mov    (%esp),%ebx
    10d3:	c3                   	ret    
    10d4:	66 90                	xchg   %ax,%ax
    10d6:	66 90                	xchg   %ax,%ax
    10d8:	66 90                	xchg   %ax,%ax
    10da:	66 90                	xchg   %ax,%ax
    10dc:	66 90                	xchg   %ax,%ax
    10de:	66 90                	xchg   %ax,%ax

000010e0 <deregister_tm_clones>:
    10e0:	e8 e0 00 00 00       	call   11c5 <__x86.get_pc_thunk.dx>
    10e5:	81 c2 1b 2f 00 00    	add    $0x2f1b,%edx
    10eb:	8d 8a 28 00 00 00    	lea    0x28(%edx),%ecx
    10f1:	8d 82 28 00 00 00    	lea    0x28(%edx),%eax
    10f7:	39 c8                	cmp    %ecx,%eax
    10f9:	74 1d                	je     1118 <deregister_tm_clones+0x38>
    10fb:	8b 82 e8 ff ff ff    	mov    -0x18(%edx),%eax
    1101:	85 c0                	test   %eax,%eax
    1103:	74 13                	je     1118 <deregister_tm_clones+0x38>
    1105:	55                   	push   %ebp
    1106:	89 e5                	mov    %esp,%ebp
    1108:	83 ec 14             	sub    $0x14,%esp
    110b:	51                   	push   %ecx
    110c:	ff d0                	call   *%eax
    110e:	83 c4 10             	add    $0x10,%esp
    1111:	c9                   	leave  
    1112:	c3                   	ret    
    1113:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1117:	90                   	nop
    1118:	c3                   	ret    
    1119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001120 <register_tm_clones>:
    1120:	e8 a0 00 00 00       	call   11c5 <__x86.get_pc_thunk.dx>
    1125:	81 c2 db 2e 00 00    	add    $0x2edb,%edx
    112b:	55                   	push   %ebp
    112c:	89 e5                	mov    %esp,%ebp
    112e:	53                   	push   %ebx
    112f:	8d 8a 28 00 00 00    	lea    0x28(%edx),%ecx
    1135:	8d 82 28 00 00 00    	lea    0x28(%edx),%eax
    113b:	83 ec 04             	sub    $0x4,%esp
    113e:	29 c8                	sub    %ecx,%eax
    1140:	89 c3                	mov    %eax,%ebx
    1142:	c1 e8 1f             	shr    $0x1f,%eax
    1145:	c1 fb 02             	sar    $0x2,%ebx
    1148:	01 d8                	add    %ebx,%eax
    114a:	d1 f8                	sar    %eax
    114c:	74 14                	je     1162 <register_tm_clones+0x42>
    114e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1154:	85 d2                	test   %edx,%edx
    1156:	74 0a                	je     1162 <register_tm_clones+0x42>
    1158:	83 ec 08             	sub    $0x8,%esp
    115b:	50                   	push   %eax
    115c:	51                   	push   %ecx
    115d:	ff d2                	call   *%edx
    115f:	83 c4 10             	add    $0x10,%esp
    1162:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1165:	c9                   	leave  
    1166:	c3                   	ret    
    1167:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    116e:	66 90                	xchg   %ax,%ax

00001170 <__do_global_dtors_aux>:
    1170:	55                   	push   %ebp
    1171:	89 e5                	mov    %esp,%ebp
    1173:	53                   	push   %ebx
    1174:	e8 57 ff ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    1179:	81 c3 87 2e 00 00    	add    $0x2e87,%ebx
    117f:	83 ec 04             	sub    $0x4,%esp
    1182:	80 bb 28 00 00 00 00 	cmpb   $0x0,0x28(%ebx)
    1189:	75 27                	jne    11b2 <__do_global_dtors_aux+0x42>
    118b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1191:	85 c0                	test   %eax,%eax
    1193:	74 11                	je     11a6 <__do_global_dtors_aux+0x36>
    1195:	83 ec 0c             	sub    $0xc,%esp
    1198:	ff b3 24 00 00 00    	pushl  0x24(%ebx)
    119e:	e8 dd fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a3:	83 c4 10             	add    $0x10,%esp
    11a6:	e8 35 ff ff ff       	call   10e0 <deregister_tm_clones>
    11ab:	c6 83 28 00 00 00 01 	movb   $0x1,0x28(%ebx)
    11b2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11b5:	c9                   	leave  
    11b6:	c3                   	ret    
    11b7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11be:	66 90                	xchg   %ax,%ax

000011c0 <frame_dummy>:
    11c0:	e9 5b ff ff ff       	jmp    1120 <register_tm_clones>

000011c5 <__x86.get_pc_thunk.dx>:
    11c5:	8b 14 24             	mov    (%esp),%edx
    11c8:	c3                   	ret    

000011c9 <flag>:
    11c9:	53                   	push   %ebx
    11ca:	83 ec 38             	sub    $0x38,%esp
    11cd:	e8 fe fe ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    11d2:	81 c3 2e 2e 00 00    	add    $0x2e2e,%ebx
    11d8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    11de:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    11e2:	31 c0                	xor    %eax,%eax
    11e4:	eb 16                	jmp    11fc <flag+0x33>
    11e6:	0f b6 94 03 60 e0 ff 	movzbl -0x1fa0(%ebx,%eax,1),%edx
    11ed:	ff 
    11ee:	32 94 03 80 e0 ff ff 	xor    -0x1f80(%ebx,%eax,1),%dl
    11f5:	88 54 04 0c          	mov    %dl,0xc(%esp,%eax,1)
    11f9:	83 c0 01             	add    $0x1,%eax
    11fc:	83 f8 1f             	cmp    $0x1f,%eax
    11ff:	76 e5                	jbe    11e6 <flag+0x1d>
    1201:	83 ec 0c             	sub    $0xc,%esp
    1204:	8d 44 24 18          	lea    0x18(%esp),%eax
    1208:	50                   	push   %eax
    1209:	e8 42 fe ff ff       	call   1050 <puts@plt>
    120e:	83 c4 10             	add    $0x10,%esp
    1211:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    1215:	65 2b 05 14 00 00 00 	sub    %gs:0x14,%eax
    121c:	75 05                	jne    1223 <flag+0x5a>
    121e:	83 c4 38             	add    $0x38,%esp
    1221:	5b                   	pop    %ebx
    1222:	c3                   	ret    
    1223:	e8 b8 01 00 00       	call   13e0 <__stack_chk_fail_local>

00001228 <checkPassword>:
    1228:	53                   	push   %ebx
    1229:	83 ec 38             	sub    $0x38,%esp
    122c:	e8 9f fe ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    1231:	81 c3 cf 2d 00 00    	add    $0x2dcf,%ebx
    1237:	8b 4c 24 40          	mov    0x40(%esp),%ecx
    123b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    1241:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    1245:	31 c0                	xor    %eax,%eax
    1247:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    124e:	00 
    124f:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
    1256:	00 
    1257:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
    125e:	00 
    125f:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    1266:	00 
    1267:	eb 16                	jmp    127f <checkPassword+0x57>
    1269:	0f b6 94 03 40 e0 ff 	movzbl -0x1fc0(%ebx,%eax,1),%edx
    1270:	ff 
    1271:	32 94 03 4c e0 ff ff 	xor    -0x1fb4(%ebx,%eax,1),%dl
    1278:	88 54 04 1c          	mov    %dl,0x1c(%esp,%eax,1)
    127c:	83 c0 01             	add    $0x1,%eax
    127f:	83 f8 0b             	cmp    $0xb,%eax
    1282:	76 e5                	jbe    1269 <checkPassword+0x41>
    1284:	83 ec 08             	sub    $0x8,%esp
    1287:	51                   	push   %ecx
    1288:	8d 44 24 18          	lea    0x18(%esp),%eax
    128c:	50                   	push   %eax
    128d:	e8 ae fd ff ff       	call   1040 <strcpy@plt>
    1292:	83 c4 10             	add    $0x10,%esp
    1295:	b8 00 00 00 00       	mov    $0x0,%eax
    129a:	eb 0f                	jmp    12ab <checkPassword+0x83>
    129c:	0f b6 4c 04 0c       	movzbl 0xc(%esp,%eax,1),%ecx
    12a1:	8d 51 01             	lea    0x1(%ecx),%edx
    12a4:	88 54 04 0c          	mov    %dl,0xc(%esp,%eax,1)
    12a8:	83 c0 01             	add    $0x1,%eax
    12ab:	83 f8 0f             	cmp    $0xf,%eax
    12ae:	76 ec                	jbe    129c <checkPassword+0x74>
    12b0:	b8 00 00 00 00       	mov    $0x0,%eax
    12b5:	83 f8 0f             	cmp    $0xf,%eax
    12b8:	77 29                	ja     12e3 <checkPassword+0xbb>
    12ba:	0f b6 4c 04 0c       	movzbl 0xc(%esp,%eax,1),%ecx
    12bf:	38 4c 04 1c          	cmp    %cl,0x1c(%esp,%eax,1)
    12c3:	75 05                	jne    12ca <checkPassword+0xa2>
    12c5:	83 c0 01             	add    $0x1,%eax
    12c8:	eb eb                	jmp    12b5 <checkPassword+0x8d>
    12ca:	83 ec 0c             	sub    $0xc,%esp
    12cd:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
    12d3:	50                   	push   %eax
    12d4:	e8 77 fd ff ff       	call   1050 <puts@plt>
    12d9:	83 c4 10             	add    $0x10,%esp
    12dc:	b8 00 00 00 00       	mov    $0x0,%eax
    12e1:	eb 05                	jmp    12e8 <checkPassword+0xc0>
    12e3:	b8 01 00 00 00       	mov    $0x1,%eax
    12e8:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
    12ec:	65 2b 1d 14 00 00 00 	sub    %gs:0x14,%ebx
    12f3:	75 05                	jne    12fa <checkPassword+0xd2>
    12f5:	83 c4 38             	add    $0x38,%esp
    12f8:	5b                   	pop    %ebx
    12f9:	c3                   	ret    
    12fa:	e8 e1 00 00 00       	call   13e0 <__stack_chk_fail_local>

000012ff <main>:
    12ff:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1303:	83 e4 f0             	and    $0xfffffff0,%esp
    1306:	ff 71 fc             	pushl  -0x4(%ecx)
    1309:	55                   	push   %ebp
    130a:	89 e5                	mov    %esp,%ebp
    130c:	53                   	push   %ebx
    130d:	51                   	push   %ecx
    130e:	e8 bd fd ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    1313:	81 c3 ed 2c 00 00    	add    $0x2ced,%ebx
    1319:	8b 41 04             	mov    0x4(%ecx),%eax
    131c:	83 39 02             	cmpl   $0x2,(%ecx)
    131f:	74 2b                	je     134c <main+0x4d>
    1321:	83 ec 04             	sub    $0x4,%esp
    1324:	ff 30                	pushl  (%eax)
    1326:	8d 83 17 e0 ff ff    	lea    -0x1fe9(%ebx),%eax
    132c:	50                   	push   %eax
    132d:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
    1333:	ff 30                	pushl  (%eax)
    1335:	e8 36 fd ff ff       	call   1070 <fprintf@plt>
    133a:	83 c4 10             	add    $0x10,%esp
    133d:	b8 00 00 00 00       	mov    $0x0,%eax
    1342:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1345:	59                   	pop    %ecx
    1346:	5b                   	pop    %ebx
    1347:	5d                   	pop    %ebp
    1348:	8d 61 fc             	lea    -0x4(%ecx),%esp
    134b:	c3                   	ret    
    134c:	83 ec 0c             	sub    $0xc,%esp
    134f:	ff 70 04             	pushl  0x4(%eax)
    1352:	e8 d1 fe ff ff       	call   1228 <checkPassword>
    1357:	83 c4 10             	add    $0x10,%esp
    135a:	84 c0                	test   %al,%al
    135c:	74 df                	je     133d <main+0x3e>
    135e:	e8 66 fe ff ff       	call   11c9 <flag>
    1363:	eb d8                	jmp    133d <main+0x3e>
    1365:	66 90                	xchg   %ax,%ax
    1367:	66 90                	xchg   %ax,%ax
    1369:	66 90                	xchg   %ax,%ax
    136b:	66 90                	xchg   %ax,%ax
    136d:	66 90                	xchg   %ax,%ax
    136f:	90                   	nop

00001370 <__libc_csu_init>:
    1370:	55                   	push   %ebp
    1371:	e8 5b 00 00 00       	call   13d1 <__x86.get_pc_thunk.bp>
    1376:	81 c5 8a 2c 00 00    	add    $0x2c8a,%ebp
    137c:	57                   	push   %edi
    137d:	56                   	push   %esi
    137e:	53                   	push   %ebx
    137f:	83 ec 0c             	sub    $0xc,%esp
    1382:	89 eb                	mov    %ebp,%ebx
    1384:	8b 7c 24 28          	mov    0x28(%esp),%edi
    1388:	e8 73 fc ff ff       	call   1000 <_init>
    138d:	8d 9d f4 fe ff ff    	lea    -0x10c(%ebp),%ebx
    1393:	8d 85 f0 fe ff ff    	lea    -0x110(%ebp),%eax
    1399:	29 c3                	sub    %eax,%ebx
    139b:	c1 fb 02             	sar    $0x2,%ebx
    139e:	74 25                	je     13c5 <__libc_csu_init+0x55>
    13a0:	31 f6                	xor    %esi,%esi
    13a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    13a8:	83 ec 04             	sub    $0x4,%esp
    13ab:	57                   	push   %edi
    13ac:	ff 74 24 2c          	pushl  0x2c(%esp)
    13b0:	ff 74 24 2c          	pushl  0x2c(%esp)
    13b4:	ff 94 b5 f0 fe ff ff 	call   *-0x110(%ebp,%esi,4)
    13bb:	83 c6 01             	add    $0x1,%esi
    13be:	83 c4 10             	add    $0x10,%esp
    13c1:	39 f3                	cmp    %esi,%ebx
    13c3:	75 e3                	jne    13a8 <__libc_csu_init+0x38>
    13c5:	83 c4 0c             	add    $0xc,%esp
    13c8:	5b                   	pop    %ebx
    13c9:	5e                   	pop    %esi
    13ca:	5f                   	pop    %edi
    13cb:	5d                   	pop    %ebp
    13cc:	c3                   	ret    
    13cd:	8d 76 00             	lea    0x0(%esi),%esi

000013d0 <__libc_csu_fini>:
    13d0:	c3                   	ret    

000013d1 <__x86.get_pc_thunk.bp>:
    13d1:	8b 2c 24             	mov    (%esp),%ebp
    13d4:	c3                   	ret    
    13d5:	66 90                	xchg   %ax,%ax
    13d7:	66 90                	xchg   %ax,%ax
    13d9:	66 90                	xchg   %ax,%ax
    13db:	66 90                	xchg   %ax,%ax
    13dd:	66 90                	xchg   %ax,%ax
    13df:	90                   	nop

000013e0 <__stack_chk_fail_local>:
    13e0:	53                   	push   %ebx
    13e1:	e8 ea fc ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    13e6:	81 c3 1a 2c 00 00    	add    $0x2c1a,%ebx
    13ec:	83 ec 08             	sub    $0x8,%esp
    13ef:	e8 3c fc ff ff       	call   1030 <__stack_chk_fail@plt>

Disassembly of section .fini:

000013f4 <_fini>:
    13f4:	53                   	push   %ebx
    13f5:	83 ec 08             	sub    $0x8,%esp
    13f8:	e8 d3 fc ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    13fd:	81 c3 03 2c 00 00    	add    $0x2c03,%ebx
    1403:	83 c4 08             	add    $0x8,%esp
    1406:	5b                   	pop    %ebx
    1407:	c3                   	ret    
