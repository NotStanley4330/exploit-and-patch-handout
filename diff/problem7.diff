--- .originals/problem7.c	2024-03-03 03:36:58.831653400 +0000
+++ problem7.c	2024-03-28 02:04:34.292906800 +0000
@@ -9,6 +9,8 @@
 
 int accountBalance = 1000;
 
+pthread_mutex_t threadLock;
+
 void flag() {
   printf("The flag goes here");
 }
@@ -17,9 +19,13 @@
 void *withdraw(void *arg) {
   unsigned short amount = *(unsigned short *)arg;
 
+  //lock this sucker down
+  pthread_mutex_lock(&threadLock);
   // Ensure the user has enough money to complete this transaction
   if (amount > accountBalance) {
     printf("Insufficient funds for withdrawal of $%hu\n", amount);
+    //unlock it
+    pthread_mutex_unlock(&threadLock);
     return NULL;
   }
 
@@ -29,16 +35,22 @@
   for (unsigned short i = 0; i < amount; i++) {
     --accountBalance;
   }
+  //unlock it
+  pthread_mutex_unlock(&threadLock);
   return NULL;
 }
 
 // Deposit money into the user's account
 void *deposit(void *arg) {
   unsigned short amount = *(unsigned short *)arg;
+  //lock it
+  pthread_mutex_lock(&threadLock);
 
   // Ensure that the deposit won't overflow the balance.
   if ((amount + accountBalance) > MAX_BALANCE) {
     printf("Accounts can at most have $%d. This deposit would put you over that limit!\n", MAX_BALANCE);
+    //unlock it now that access is done
+    pthread_mutex_unlock(&threadLock);
     return NULL;
   }
 
@@ -48,6 +60,7 @@
   for (unsigned short i = 0; i < amount; i++) {
     ++accountBalance;
   }
+  pthread_mutex_unlock(&threadLock);
   return NULL;
 }
 
